version: '3.7'

services:
  nginx:
    build: ./nginx

    ports:
      - 1339:80

    volumes:
      - static_volume:/home/app/microservice/static

    depends_on:
      - web
    links:
      - web

    restart: "on-failure"

    networks:
      - djangonetwork

  web:
    build: .

    command: sh -c "python manage.py makemigrations &&
                    python manage.py migrate &&
                    python -m  gunicorn emprestimo.wsgi:application --bind 0.0.0.0:${APP_PORT} --reload"

    volumes:
      - ./emprestimo:/home/app/microservice
      - ./static_volume:/home/app/microservice/static

    env_file:
      - .env

    image: microservice_app

    expose:
      - "8000"

    restart: always

    depends_on:
      - db

    links:
      - db:db

    networks:
      - djangonetwork

  celery:
    restart: always

    build:
      context: .

    command: sh -c "celery -A emprestimo worker -l info"

    volumes:
      - ./emprestimo:/home/app/microservice

    env_file:
      - .env

    depends_on:
      - db
      - rabbitmq
      - web

    networks:
      - djangonetwork

  db:
    image: postgres:12-alpine

    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data/

    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - PGPORT=${DB_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - "POSTGRES_HOST_AUTH_METHOD=trust"

    restart: "on-failure"

    networks:
      - djangonetwork


  rabbitmq:
    image:
      rabbitmq:3-management-alpine
    container_name: rabbitmq
    volumes:
      - ./.docker/rabbitmq/etc/:/etc/rabbitmq/
      - ./.docker/rabbitmq/data/:/var/lib/rabbitmq/
    environment:
      RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_ERLANG_COOKIE}
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - 5672:5672
      - 15672:15672

    depends_on:
      - web

    networks:
      - djangonetwork

volumes:
  postgres_data:
  static_volume:
  rabbitmq:
  rabbitmq_logs:

networks:
  djangonetwork:
    driver: bridge
